{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/all-tasks/all-tasks.component.css","webpack:///./src/app/all-tasks/all-tasks.component.html","webpack:///./src/app/all-tasks/all-tasks.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsbC10YXNrcy9hbGwtdGFza3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  all-tasks works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-all-tasks',\n  templateUrl: './all-tasks.component.html',\n  styleUrls: ['./all-tasks.component.css']\n})\nexport class AllTasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"*{\\n  background-color: antiquewhite;\\n  text-align: center;\\n\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwrQkFBK0I7RUFDL0IsbUJBQW1COztDQUVwQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiKntcbiAgYmFja2dyb3VuZC1jb2xvcjogYW50aXF1ZXdoaXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbn1cblxuIl19 */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>{{ title }}!</h1>\\n  <br>\\n  <fieldset>\\n    <legend>Make a Task</legend>\\n    <form (submit)=\\\"makeTask()\\\">\\n        <input type=\\\"text\\\" name=\\\"newTask.title\\\" [(ngModel)]='newTask.title' placeholder=\\\"title\\\" />\\n        <input type=\\\"text\\\" name=\\\"newTask.description\\\" [(ngModel)]=\\\"newTask.description\\\" placeholder=\\\"description\\\" />\\n      <input type=\\\"submit\\\" value=\\\"Create Yo Task!\\\" />\\n    </form>\\n  </fieldset>\\n\\n\\n  <app-all-tasks></app-all-tasks>\\n\\n\\n\\n  <fieldset>\\n    <legend>Task List</legend>\\n      <ul *ngFor= \\\"let task of tasks\\\">\\n        <li> {{task.title}} ,  {{ task.description}}\\n            <form (submit)=\\\"removeTask(task._id)\\\">\\n                <input type=\\\"submit\\\" value=\\\"Delete\\\" />\\n            </form>\\n            <button (click)=\\\"taskToEdit(task._id)\\\">Edit</button>\\n\\n\\n            <!-- <app-edit *ngIf='BUTTONwasCLICKED' [LoadEditForm]='task'></app-edit> -->\\n\\n        </li>\\n        </ul>\\n    </fieldset>\\n\\n<app-edit *ngIf='BUTTONwasCLICKED' [taskToBeEdit]=\\\"golly\\\"></app-edit>\\n\\n\\n\\n\\n\\n\\n</div>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'Restful Tasks API';\n  tasks = [];\n  newTask = {\n    'title': '',\n    'description': ''\n  };\n  editTask = {\n    'title': '',\n    'description': ''\n  };\n\n  golly: any;\n\n  BUTTONwasCLICKED = false;\n\n\n  constructor(private _httpService: HttpService) {\n  }\n\n  ngOnInit() {\n    this.getTasksFromService();\n\n  }\n\n  edit(task_id) {\n    let observable = this._httpService.edit(task_id, this.editTask);\n    observable.subscribe( data => {\n      console.log(data);\n      this.golly = this.editTask;\n      // this.BUTTONwasCLICKED = false;\n      this.getTasksFromService();\n      this.editTask = {\n        'title': '',\n        'description': ''\n      };\n    });\n  }\n\n  receiveMesseage($event) {\n    this.editTask = $event;\n    this.edit($event.id);\n  }\n\n  getTasksFromService() {\n    let observable = this._httpService.getTasks();\n    observable.subscribe((data) => {\n      console.log( data);\n      this.tasks = data['tasks'];\n  });\n}\n\n  makeTask() {\n    let observable = this._httpService.createTask(this.newTask);\n    observable.subscribe( data => {\n      console.log(data);\n      this.getTasksFromService();\n      this.newTask = {\n        'title': '',\n        'description': ''\n      };\n    });\n  }\n\n  taskToEdit(task_id) {\n    this.BUTTONwasCLICKED = true;\n  }\n\n\n  removeTask(task_id) {\n\n    let observable = this._httpService.deleteTask(task_id);\n    console.log('REMOVE TASK EXECUTED!', task_id);\n    observable.subscribe( (data) => {\n      this.getTasksFromService();\n    });\n  }\n}\n//   onButtonClick(): void {\n//     console.log(`Click event is working`);\n// }\n// onButtonClickParam(num: Number): void {\n//     console.log(`Click event is working with num param: ${num}`);\n// }\n// onButtonClickParams(num: Number, str: String): void {\n//     console.log(`Click event is working with num param: ${num} and str param: ${str}`);\n// }\n// onButtonClickEvent(event: any): void {\n//     console.log(`Click event is working with event: ${event}`);\n// }\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { EditComponent } from './edit/edit.component';\nimport { AllTasksComponent } from './all-tasks/all-tasks.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EditComponent,\n    AllTasksComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<form (submit)=\\\"sendEdit(taskToBeEdit)\\\">\\n    <p>{{ taskToBeEdit.title }}</p>\\n    <input type=\\\"text\\\" name=\\\"editTask.WHAT\\\" [(ngModel)]='editTask.WHAT' placeholder=\\\"{{taskToBeEdit.title}}\\\" />\\n    <p>{{ taskToBeEdit.description }}</p>\\n    <input type=\\\"text\\\" name=\\\"editTask.description\\\" [(ngModel)]=\\\"editTask.description\\\" placeholder=\\\"{{ taskToBeEdit.description}}\\\" />\\n    <input type=\\\"submit\\\" value=\\\"Edit\\\" />\\n</form>\\n<!-- <form (submit)=\\\"edit(task._id)\\\">\\n    <input type=\\\"text\\\" name=\\\"newTask.title\\\" [(ngModel)]='editTask.title' placeholder=\\\"{{task.title}}\\\" />\\n    <input type=\\\"text\\\" name=\\\"editTask.description\\\" [(ngModel)]=\\\"editTask.description\\\" placeholder=\\\"{{ task.description}}\\\" />\\n    <input type=\\\"submit\\\" value=\\\"Edit\\\" />\\n</form> -->\\n\\n\"","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  @Input() taskToBeEdit: any;\n  // @Input() LoadEditForm: any;\n  @Input() message: string;\n  editTask = {\n    'title': '',\n    'description': ''\n  };\n\n\n  @Output() messageEvent = new EventEmitter<any>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n  sendEdit(task) {\n    this.editTask = task;\n    this.messageEvent.emit(this.editTask);\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class HttpService {\n  constructor(private _http: HttpClient) {\n\n  }\n\n  getTasks() {\n\n\n    return this._http.get('/tasks');\n }\n\n createTask(newTask) {\n   return this._http.post('/tasks', newTask);\n }\n\ndeleteTask(id) {\n  console.log('DELETE TASK EXECUTED!', id);\n  return this._http.delete(`/tasks/${id}`);\n}\n\naddTask(newtask) {\n  return this._http.post('/task', newtask);\n}\n\nedit(id, edittask) {\n  return this._http.put(`/update/${id}`, edittask);\n}\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}